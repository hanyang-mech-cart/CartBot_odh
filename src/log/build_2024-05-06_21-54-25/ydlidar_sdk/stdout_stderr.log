-- The C compiler identification is GNU 11.4.0
-- The CXX compiler identification is GNU 11.4.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
[0mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.

[0m
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Current platform: Linux
[0mCMake Deprecation Warning at CMakeLists.txt:50 (cmake_policy):
  The OLD behavior for policy CMP0053 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.

[0m
[0mCMake Deprecation Warning at CMakeLists.txt:53 (cmake_policy):
  The OLD behavior for policy CMP0037 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.

[0m
[0mCMake Deprecation Warning at CMakeLists.txt:56 (cmake_policy):
  The OLD behavior for policy CMP0043 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.

[0m
-- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) 
-- Found PythonInterp: /usr/bin/python3.10 (found version "3.10.12") 
-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython3.10.so (found version "3.10.12") 
-- Found GTest: /usr/lib/x86_64-linux-gnu/cmake/GTest/GTestConfig.cmake (found version "1.11.0")  
[0mCMake Deprecation Warning at core/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.

[0m
[0mCMake Deprecation Warning at samples/CMakeLists.txt:2 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.

[0m
-- build test is ON.....
[0mCMake Deprecation Warning at cmake/install_package.cmake:101 (cmake_policy):
  The OLD behavior for policy CMP0026 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.
Call Stack (most recent call first):
  CMakeLists.txt:168 (install_package)

[0m
[33mCMake Warning (dev) at cmake/install_package.cmake:191 (install):
  Policy CMP0062 is not set: Disallow install() of export() result.  Run
  "cmake --help-policy CMP0062" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The file

    /home/oh/slam_ws/src/build/ydlidar_sdk/ydlidar_sdkTargets.cmake

  was generated by the export() command.  It should not be installed with the
  install() command.  Use the install(EXPORT) mechanism instead.  See the
  cmake-packages(7) manual for more.

Call Stack (most recent call first):
  CMakeLists.txt:168 (install_package)
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
-- 
-- +===========================================================================+
-- |         Resulting configuration for                             |
-- +===========================================================================+
--  _________________________ PLATFORM _____________________________
--  Host                        : Linux5.15.20-051520-genericx86_64
--  Is the system big endian?   :  No 
--  Word size (32/64 bit)       : 64
--  CMake version               : 3.22.1
--  CMake generator             : Unix Makefiles
--  CMake build tool            : /usr/bin/gmake
--  Compiler                    : GNU
--  Configuration               : 
-- 
--  __________________________ OPTIONS _____________________________
--  Build YDLidar-SDK as a shared library?ã€€ã€€ :  No 
--  Build Examples?ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ : Yes 
--  Build C Sharp API?ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ã€€ :  No 
--  Build TEST?  			ã€€ã€€ã€€ : Yes 
-- 
--  _________________________ INSTALL _____________________
--  Install prefix                    : /home/oh/slam_ws/src/install/ydlidar_sdk
-- 
--  _______________________ WRAPPERS/BINDINGS ______________________
--  Python bindings (pyydlidar)   :  No 
--   - dep: Swig found?       :  No [Version: ]
--   - dep: PythonLibs found?  : Yes [Version: 3.10.12]
-- 
-- Configuring done
-- Generating done
-- Build files have been written to: /home/oh/slam_ws/src/build/ydlidar_sdk
[  2%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/base/timer.cpp.o[0m
[  5%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/list_ports_linux.cpp.o[0m
[  7%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/unix_serial.cpp.o[0m
[ 10%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/CYdLidar.cpp.o[0m
[ 12%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/ETLidarDriver.cpp.o[0m
[ 15%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/GSLidarDriver.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.cpp:29[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/ETLidarDriver.h:46[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/ETLidarDriver.cpp:32[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/GSLidarDriver.h:57[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:35[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:[m[K In member function â€˜[01m[Kresult_t ydlidar::GSLidarDriver::waitPackage(node_info*, uint32_t)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:863:80:[m[K [01;35m[Kwarning: [m[Ktaking address of packed member of â€˜[01m[Knode_info[m[Kâ€™ may result in an unaligned pointer value [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Waddress-of-packed-member-Waddress-of-packed-member]8;;[m[K]
  863 |                 angTransform((*node).dist, package_Sample_Index, &sampleAngle, [01;35m[K&(*node).dist[m[K);
      |                                                                                [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:865:81:[m[K [01;35m[Kwarning: [m[Ktaking address of packed member of â€˜[01m[Knode_info[m[Kâ€™ may result in an unaligned pointer value [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Waddress-of-packed-member-Waddress-of-packed-member]8;;[m[K]
  865 |                 angTransform2((*node).dist, package_Sample_Index, &sampleAngle, [01;35m[K&(*node).dist[m[K);
      |                                                                                 [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:[m[K In member function â€˜[01m[Kresult_t ydlidar::GSLidarDriver::createThread()[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1455:45:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
 1455 |     printf("[GS2Lidar] Create GS2 thread 0x[01;35m[K%X[m[K\n", [32m[K_thread.getHandle()[m[K);
      |                                            [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~~~~~~~~[m[K
      |                                             [01;35m[K|[m[K                      [32m[K|[m[K
      |                                             [01;35m[Kunsigned int[m[K           [32m[K_size_t {aka long unsigned int}[m[K
      |                                            [32m[K%lX[m[K
[ 17%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/SDMLidarDriver.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/SDMLidarDriver.h:57[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:35[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:[m[K In member function â€˜[01m[Kresult_t ydlidar::SDMLidarDriver::createThread()[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:812:44:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  812 |     printf("[YDLIDAR] Create SDM thread 0x[01;35m[K%X[m[K\n", [32m[K_thread.getHandle()[m[K);
      |                                           [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~~~~~~~~[m[K
      |                                            [01;35m[K|[m[K                      [32m[K|[m[K
      |                                            [01;35m[Kunsigned int[m[K           [32m[K_size_t {aka long unsigned int}[m[K
      |                                           [32m[K%lX[m[K
[ 20%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/YDlidarDriver.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/YDlidarDriver.h:46[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:26[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:[m[K In member function â€˜[01m[Kresult_t ydlidar::YDlidarDriver::createThread()[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:2010:38:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
 2010 |   printf("[YDLIDAR] Create thread 0x[01;35m[K%X[m[K\n", [32m[K_thread.getHandle()[m[K);
      |                                     [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~~~~~~~~[m[K
      |                                      [01;35m[K|[m[K                      [32m[K|[m[K
      |                                      [01;35m[Kunsigned int[m[K           [32m[K_size_t {aka long unsigned int}[m[K
      |                                     [32m[K%lX[m[K
[ 22%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/ydlidar_sdk.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/ydlidar_sdk.cpp:27[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 25%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/filters/NoiseFilter.cpp.o[0m
[ 27%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/filters/StrongLightFilter.cpp.o[0m
[ 30%] [32mBuilding C object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/lock.c.o[0m
[ 32%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/serial.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/core/serial/common.h:45[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/core/serial/serial.cpp:12[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 35%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/SimpleSocket.cpp.o[0m
[ 37%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/PassiveSocket.cpp.o[0m
[ 40%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/ActiveSocket.cpp.o[0m
[ 42%] [32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/common/ydlidar_def.cpp.o[0m
[ 45%] [32m[1mLinking CXX static library libydlidar_sdk.a[0m
[ 45%] Built target ydlidar_sdk
[ 47%] [32mBuilding CXX object samples/CMakeFiles/et_test.dir/et_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/et_test.cpp:34[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 50%] [32m[1mLinking CXX executable ../et_test[0m
[ 50%] Built target et_test
[ 52%] [32mBuilding CXX object samples/CMakeFiles/tri_restart.dir/tri_restart.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/tri_restart.cpp:1[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 55%] [32m[1mLinking CXX executable ../tri_restart[0m
[ 55%] Built target tri_restart
[ 57%] [32mBuilding CXX object samples/CMakeFiles/tri_test.dir/tri_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/tri_test.cpp:34[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/tri_test.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/tri_test.cpp:318:33:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%llu[m[Kâ€™ expects argument of type â€˜[01m[Klong long unsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[Kstd::vector<LaserPoint>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  318 |       printf("Scan received [[01;35m[K%llu[m[K] points scanFreq [%.02f]\n",
      |                              [01;35m[K~~~^[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Klong long unsigned int[m[K
      |                              [32m[K%lu[m[K
  319 |              [32m[Kscan.points.size()[m[K,
      |              [32m[K~~~~~~~~~~~~~~~~~~[m[K  
      |                              [32m[K|[m[K
      |                              [32m[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}[m[K
[ 60%] [32m[1mLinking CXX executable ../tri_test[0m
[ 60%] Built target tri_test
[ 62%] [32mBuilding C object samples/CMakeFiles/lidar_c_api_test.dir/lidar_c_api_test.c.o[0m
[01m[Kcc1:[m[K [01;35m[Kwarning: [m[Kcommand-line option â€˜[01m[K-std=c++11[m[Kâ€™ is valid for C++/ObjC++ but not for C
[ 65%] [32m[1mLinking CXX executable ../lidar_c_api_test[0m
[ 65%] Built target lidar_c_api_test
[ 67%] [32mBuilding CXX object test/CMakeFiles/lidar_test.dir/lidar_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/test/lidar_test.h:5[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/test/lidar_test.cpp:1[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 70%] [32m[1mLinking CXX executable lidar_test[0m
[ 70%] Built target lidar_test
[ 72%] [32mBuilding CXX object samples/CMakeFiles/tri_and_gs_test.dir/tri_and_gs_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/tri_and_gs_test.cpp:1[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 75%] [32m[1mLinking CXX executable ../tri_and_gs_test[0m
[ 75%] Built target tri_and_gs_test
[ 77%] [32mBuilding CXX object samples/CMakeFiles/tof_test.dir/tof_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/tof_test.cpp:38[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 80%] [32m[1mLinking CXX executable ../tof_test[0m
[ 80%] Built target tof_test
[ 82%] [32mBuilding CXX object samples/CMakeFiles/tmini_test.dir/tmini_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/tmini_test.cpp:34[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 85%] [32m[1mLinking CXX executable ../tmini_test[0m
[ 85%] Built target tmini_test
[ 87%] [32mBuilding CXX object samples/CMakeFiles/sdm_test.dir/sdm_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/sdm_test.cpp:34[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[ 90%] [32m[1mLinking CXX executable ../sdm_test[0m
[ 90%] Built target sdm_test
[ 92%] [32mBuilding CXX object samples/CMakeFiles/scl_test.dir/scl_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/scl_test.cpp:34[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/scl_test.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/scl_test.cpp:333:33:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%llu[m[Kâ€™ expects argument of type â€˜[01m[Klong long unsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[Kstd::vector<LaserPoint>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  333 |       printf("Scan received [[01;35m[K%llu[m[K] points scanFreq [%.02f]\n",
      |                              [01;35m[K~~~^[m[K
      |                                 [01;35m[K|[m[K
      |                                 [01;35m[Klong long unsigned int[m[K
      |                              [32m[K%lu[m[K
  334 |              [32m[Kscan.points.size()[m[K,
      |              [32m[K~~~~~~~~~~~~~~~~~~[m[K  
      |                              [32m[K|[m[K
      |                              [32m[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}[m[K
[ 95%] [32m[1mLinking CXX executable ../scl_test[0m
[ 95%] Built target scl_test
[ 97%] [32mBuilding CXX object samples/CMakeFiles/gs_test.dir/gs_test.cpp.o[0m
In file included from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/src/CYdLidar.h:48[m[K,
                 from [01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/gs_test.cpp:40[m[K:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:[m[K In member function â€˜[01m[Kint ydlidar::core::base::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  136 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d]\n", [32m[K_handle[m[K, s);
      |                                             [01;35m[K~^[m[K                          [32m[K~~~~~~~[m[K
      |                                              [01;35m[K|[m[K                          [32m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K               [32m[K_size_t {aka long unsigned int}[m[K
      |                                             [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  138 |           printf("[YDLIDAR DEBUG] Thread [0x[01;35m[K%X[m[K] ready to cancel[%d] time[%u]\n",
      |                                             [01;35m[K~^[m[K
      |                                              [01;35m[K|[m[K
      |                                              [01;35m[Kunsigned int[m[K
      |                                             [32m[K%lX[m[K
  139 |             [32m[K_handle[m[K, s, getms() - t);
      |             [32m[K~~~~~~~[m[K                           
      |             [32m[K|[m[K
      |             [32m[K_size_t {aka long unsigned int}[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  142 |             printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled in other thread\n", [32m[K_handle[m[K);
      |                                         [01;35m[K~^[m[K                                        [32m[K~~~~~~~[m[K
      |                                          [01;35m[K|[m[K                                        [32m[K|[m[K
      |                                          [01;35m[Kunsigned int[m[K                             [32m[K_size_t {aka long unsigned int}[m[K
      |                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 3 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x[01;35m[K%X[m[K] cancelled!\n", [32m[K_handle[m[K);
      |                                                                         [01;35m[K~^[m[K                 [32m[K~~~~~~~[m[K
      |                                                                          [01;35m[K|[m[K                 [32m[K|[m[K
      |                                                                          [01;35m[Kunsigned int[m[K      [32m[K_size_t {aka long unsigned int}[m[K
      |                                                                         [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%X[m[Kâ€™ expects argument of type â€˜[01m[Kunsigned int[m[Kâ€™, but argument 2 has type â€˜[01m[K_size_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  151 |           printf("[YDLIDAR] Thread [0x[01;35m[K%X[m[K] has been canceled\n", [32m[K_handle[m[K);
      |                                       [01;35m[K~^[m[K                        [32m[K~~~~~~~[m[K
      |                                        [01;35m[K|[m[K                        [32m[K|[m[K
      |                                        [01;35m[Kunsigned int[m[K             [32m[K_size_t {aka long unsigned int}[m[K
      |                                       [32m[K%lX[m[K
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/gs_test.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/oh/slam_ws/src/YDLidar-SDK/samples/gs_test.cpp:274:34:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%lld[m[Kâ€™ expects argument of type â€˜[01m[Klong long int[m[Kâ€™, but argument 3 has type â€˜[01m[Kuint32_t[m[Kâ€™ {aka â€˜[01m[Kunsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
  274 |       printf("module[%d] time[[01;35m[K%lld[m[K]\n", scan.moduleNum, t - ts[scan.moduleNum]);
      |                               [01;35m[K~~~^[m[K
      |                                  [01;35m[K|[m[K
      |                                  [01;35m[Klong long int[m[K
      |                               [32m[K%d[m[K
[100%] [32m[1mLinking CXX executable ../gs_test[0m
[100%] Built target gs_test
-- Install configuration: ""
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/base/datatype.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/base/locker.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/base/thread.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/base/timer.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/base/typedef.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/base/utils.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/base/v8stdint.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/base/ydlidar.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/common/ChannelDevice.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/common/DriverInterface.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/common/ydlidar_datatype.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/common/ydlidar_def.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/common/ydlidar_help.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/common/ydlidar_protocol.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/math/angles.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/network/ActiveSocket.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/network/PassiveSocket.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/network/SimpleSocket.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/network/StatTimer.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/serial/common.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/serial/serial.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/serial/impl/unix/lock.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/serial/impl/unix/unix.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/core/serial/impl/unix/unix_serial.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/CYdLidar.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/ETLidarDriver.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/GSLidarDriver.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/SDMLidarDriver.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/YDlidarDriver.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/ydlidar_sdk.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/filters/FilterInterface.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/filters/NoiseFilter.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/src/filters/StrongLightFilter.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/include/ydlidar_config.h
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/lib/libydlidar_sdk.a
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/lib/pkgconfig/YDLIDAR_SDK.pc
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkConfig.cmake
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkTargets.cmake
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkConfigVersion.cmake
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/FindYDLIDAR_SDK.cmake
-- Up-to-date: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/FindPackage.cmake.in
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/cmake_uninstall.cmake.in
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/script_show_final_summary.cmake
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/common
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/common/ydlidar_base.cmake
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/common/ydlidar_parse.cmake
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/PackageConfig.cmake.in
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/install_package.cmake
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/PackageConfigVersion.cmake.in
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/PkgConfig.pc.in
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/LICENSE.txt
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/README.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Dataset.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/frame_intensity.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/FlowChart.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/YDLidar.jpg
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/frame.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/angle_q2.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/system_workflow.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sequence.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/communication_mechanism.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_scanning.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/YDLidar.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_init.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_architecture.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/EAI.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Diagram.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLIDAR_SDK_API_for_Developers.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.html
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.pdf
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar_SDK_Communication_Protocol.pdf
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart/ydlidar_sdk_software_installation_guide.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart/README.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Tutorials.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_pull.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_build.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode/tasks.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode/run_tasks.jpg
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ydlidar_lidar_monitor.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_running.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ttyUSB1.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sequence.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/cpack.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sdk_scanning.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_exception.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sdk_init.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_project.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ttyUSB0.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_library.png
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_build_and_debug_using_vscode.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_csharp_project.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/README.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_solve_slow_pull_from_cn.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_gerenrate_vs_project_by_cmake.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_udev_rules.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_build_and_install.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/README.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/General_FAQs.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Hardware_FAQs_cn.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Software_FAQs_cn.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Hardware_FAQs.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Software_FAQs.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/General_FAQs_cn.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/README.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/SDK.pdf
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/examine_the_simple_lidar_tutorial.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_python.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_c.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_c++.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_network_adapter_tutorial_c++.md
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/startup/initenv.sh
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/et_test
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/gs_test
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/scl_test
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/sdm_test
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/tmini_test
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/tof_test
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/tri_and_gs_test
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/tri_restart
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/tri_test
-- Installing: /home/oh/slam_ws/src/install/ydlidar_sdk/bin/lidar_c_api_test
